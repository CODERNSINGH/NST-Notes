
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.HeroScalarFieldEnum = {
  id: 'id',
  name: 'name',
  secretIdentity: 'secretIdentity',
  alignment: 'alignment',
  hometownId: 'hometownId'
};

exports.Prisma.PowerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  population: 'population'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  certificate_id: 'certificate_id'
};

exports.Prisma.CertificateScalarFieldEnum = {
  id: 'id',
  type: 'type',
  student_id: 'student_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.HeroOrderByRelevanceFieldEnum = {
  name: 'name',
  secretIdentity: 'secretIdentity'
};

exports.Prisma.PowerOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.CityOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.StudentOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.CertificateOrderByRelevanceFieldEnum = {
  type: 'type'
};
exports.AlignmentSelect = exports.$Enums.AlignmentSelect = {
  EVIL: 'EVIL',
  VILLIAN: 'VILLIAN'
};

exports.Prisma.ModelName = {
  Hero: 'Hero',
  Power: 'Power',
  City: 'City',
  Student: 'Student',
  Certificate: 'Certificate'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/Narendra/Desktop/NST/NST-Notes/Sem 3 NST & Rishihood/AP_Lecture/Lecture 13 Prisma Application/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/Narendra/Desktop/NST/NST-Notes/Sem 3 NST & Rishihood/AP_Lecture/Lecture 13 Prisma Application/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\n// model User {\n//   id        Int      @id @default(autoincrement())\n//   name      String\n//   email     String   @unique\n//   posts     Post[]\n//   createdAt DateTime @default(now())\n// }\n\n// model Post {\n//   id        Int      @id @default(autoincrement())\n//   title     String\n//   content   String?\n//   published Boolean  @default(false)\n//   author    User     @relation(fields: [authorId], references: [id])\n//   authorId  Int\n// }\n\n// model comment {\n//   id  Int @id\n//   name String\n//   comment String\n// }\n\nenum AlignmentSelect {\n  EVIL\n  VILLIAN\n}\n\nmodel Hero {\n  id             Int             @id @default(autoincrement())\n  name           String\n  secretIdentity String? // can be null\n  alignment      AlignmentSelect\n  hometownId     Int\n  city           City            @relation(fields: [hometownId], references: [id])\n}\n\nmodel Power {\n  id          Int    @id @default(autoincrement())\n  name        String @unique\n  description String\n}\n\nmodel City {\n  id         Int    @id @default(autoincrement())\n  name       String @unique\n  population Int\n  heros      Hero[]\n}\n\nmodel Student {\n  id             Int         @id @default(autoincrement())\n  name           String\n  certificate_id Int         @unique\n  certificate    Certificate @relation(fields: [certificate_id], references: [id])\n}\n\nmodel Certificate {\n  id         Int      @id @default(autoincrement())\n  type       String\n  student_id Int      @unique\n  student    Student?\n}\n",
  "inlineSchemaHash": "4edc5a954f2e1d1dc8ce2d2d5c2fbb2b8aab86a18ae9d5a1dfdee507b5faddc3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Hero\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secretIdentity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alignment\",\"kind\":\"enum\",\"type\":\"AlignmentSelect\"},{\"name\":\"hometownId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToHero\"}],\"dbName\":null},\"Power\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"population\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"heros\",\"kind\":\"object\",\"type\":\"Hero\",\"relationName\":\"CityToHero\"}],\"dbName\":null},\"Student\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificate_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certificate\",\"kind\":\"object\",\"type\":\"Certificate\",\"relationName\":\"CertificateToStudent\"}],\"dbName\":null},\"Certificate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"student_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"CertificateToStudent\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

